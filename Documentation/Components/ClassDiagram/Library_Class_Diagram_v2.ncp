<Project>
  <Name>Library</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Class</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Book</Name>
        <Access>Public</Access>
        <Location left="1688" top="592" />
        <Size width="717" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int _pages</Member>
        <Member type="Field">private string _author</Member>
        <Member type="Field">private string _publisher</Member>
        <Member type="Method">public string GetAuthor()</Member>
        <Member type="Method">public string GetPublisher()</Member>
        <Member type="Constructor">public Book(int page, string author, string publisher)</Member>
        <Member type="Method">public override void UpdateItem(string name, string isbn, string language, string description, double cost, int pages, string author, string publisher)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public override void AddGenre()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Movie</Name>
        <Access>Public</Access>
        <Location left="2436" top="474" />
        <Size width="849" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _subtitled</Member>
        <Member type="Field">private string _producer</Member>
        <Member type="Field">private int _time√ånMin</Member>
        <Member type="Field">private string _demographic</Member>
        <Member type="Method">public string GetSubTitle()</Member>
        <Member type="Method">public string GetProducer()</Member>
        <Member type="Method">public string GetDemographic()</Member>
        <Member type="Constructor">public Movie(string subtitle, string producer, int timeInMin, string demographic)</Member>
        <Member type="Method">public override void UpdateItem(string name, string isbn, string language, string description, double cost, string language, string producer, int timeInMin, string demographic)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public override void AddGenre()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Item</Name>
        <Access>Public</Access>
        <Location left="1919" top="56" />
        <Size width="518" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected string _name</Member>
        <Member type="Field">protected string _ISBN</Member>
        <Member type="Field">protected double _cost</Member>
        <Member type="Field">private string _language</Member>
        <Member type="Field">private string _description</Member>
        <Member type="Method">public string GetLanguage()</Member>
        <Member type="Method">public string GetDescription()</Member>
        <Member type="Method">private void SetLanguage()</Member>
        <Member type="Method">private void SetDescription()</Member>
        <Member type="Constructor">public Item(string name, string ISBN, string language, string description, double cost)</Member>
        <Member type="Method">protected abstract void AddGenre()</Member>
        <Member type="Method">public void DeleteGenre(string genre)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Genre</Name>
        <Access>Public</Access>
        <Location left="2624" top="73" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _genreName</Member>
        <Member type="Method">public void GetName()</Member>
        <Member type="Method">private void SetName()</Member>
        <Member type="Constructor">public Genre(string name)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="598" top="916" />
        <Size width="753" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _fname</Member>
        <Member type="Field">private string _lname</Member>
        <Member type="Field">private string _email</Member>
        <Member type="Field">private string _telephone</Member>
        <Member type="Field">private string _street</Member>
        <Member type="Field">private string _houseNum</Member>
        <Member type="Field">private string _zipcode</Member>
        <Member type="Field">private string _city</Member>
        <Member type="Field">private string _password</Member>
        <Member type="Field">private string _keyword</Member>
        <Member type="Field">private string _card</Member>
        <Member type="Method">public string GetKeyword()</Member>
        <Member type="Constructor">public Account(string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">private static string GeneratePassword(byte[] key, string password)</Member>
        <Member type="Method">private string GenerateCard()</Member>
        <Member type="Method">private bool checkGeneratedCard(string card)</Member>
        <Member type="Method">private byte[] GenerateKeyWord()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Worker</Name>
        <Access>Public</Access>
        <Location left="508" top="1321" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _bankAccount</Member>
        <Member type="Field">private string _citizenServiceNum</Member>
        <Member type="Field">private double _salary</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="1128" top="1321" />
        <Size width="237" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _name</Member>
        <Member type="Field">private double _startSalary</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public double GetStartSalary()</Member>
        <Member type="Method">public string GetName()</Member>
        <Member type="Constructor">public Position(string name, double startSalary)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Reservation</Name>
        <Access>Public</Access>
        <Location left="1167" top="389" />
        <Size width="449" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private DateTime _startDate</Member>
        <Member type="Field">private DateTime _endDate</Member>
        <Member type="Field">private int _extensionNum</Member>
        <Member type="Method">public bool ExtendRentPeriod()</Member>
        <Member type="Constructor">public Reservation(Item item, Account user, DateTime startDate, DateTime endDate)</Member>
        <Member type="Constructor">public Reservation(DateTime start, DateTime end, Item item)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Schedule</Name>
        <Access>Public</Access>
        <Location left="1213" top="1613" />
        <Size width="405" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private DateTime _date</Member>
        <Member type="Field">private TimeSpan _beginHour</Member>
        <Member type="Field">private TimeSpan _endHour</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public void AddWorker(Worker employee)</Member>
        <Member type="Method">public void DeleteWorker(Worker worker)</Member>
        <Member type="Constructor">public Schedule(DateTime date, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Make use of correct arrows
Add Crud and poly into it
Split library class



stippel lijnen voor bijvoorbeeld reservatie
Data access layer
kijken naar interface

Kan wel gebruiken alvast</Text>
        <Location left="55" top="34" />
        <Size width="238" height="244" />
      </Entity>
      <Entity type="Class">
        <Name>ItemManagement</Name>
        <Access>Public</Access>
        <Location left="910" top="34" />
        <Size width="813" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool AddItem(string name, string ISBN, double cost, string language, string description, int page, string author, string publisher)</Member>
        <Member type="Method">public bool AddItem(string name, string ISBN, double cost, string language, string description, string subtitle, string producer, int time, string demographic)</Member>
        <Member type="Method">public bool UpdateItem(int id, string name, string ISBN, double cost, string language, string description, int page, string author, string publisher)</Member>
        <Member type="Method">public bool UpdateItem(int id, string name, string ISBN, double cost, string language, string description, string subtitle, string producer, int time, string demographic)</Member>
        <Member type="Method">public static void DeleteItem(int id)</Member>
        <Member type="Method">public object SearchItem(string data, char searchOn)</Member>
        <Member type="Method">public List&lt;Book&gt; GetAllItems()</Member>
        <Member type="Method">public List&lt;Movie&gt; GetAllItems()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReservationManagement</Name>
        <Access>Public</Access>
        <Location left="445" top="247" />
        <Size width="428" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool MakeReservation(int itemId, int accountId, DateTime StartDate)</Member>
        <Member type="Method">public static void DeleteReservation(int id)</Member>
        <Member type="Method">public bool ExtendReservation(int reservationId)</Member>
        <Member type="Method">public List&lt;Reservation&gt; GetReservations()</Member>
        <Member type="Method">public List&lt;Reservation&gt; GetReservation(int accountId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AccountManagement</Name>
        <Access>Public</Access>
        <Location left="55" top="628" />
        <Size width="934" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static bool AddAccount(string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">private static bool checkIfAlreadyExist(string mail)</Member>
        <Member type="Method">public static bool UpdateAccount(int id, string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">public static void DeleteAccount(int id)</Member>
        <Member type="Method">public static Account FindAccount(int id)</Member>
        <Member type="Method">public bool MakeAccountWorker(int accountId, int jobId, string bankAccount, string serviceNumber, double salary)</Member>
        <Member type="Method">public bool ChangeWorkerJob(int accountId, int positionId)</Member>
        <Member type="Method">public bool UpdateWorker(int accountId, string bankAccount, double salary)</Member>
        <Member type="Method">public static void DeleteWorker(int accountId)</Member>
        <Member type="Method">public bool AddPosition(string name, double salary)</Member>
        <Member type="Method">public bool UpdatePosition(int id, string name, double salary)</Member>
        <Member type="Method">public List&lt;Account&gt; GetAllAccount()</Member>
        <Member type="Method">public List&lt;Worker&gt; GetAccounts()</Member>
        <Member type="Method">public List&lt;Position&gt; GetPositions()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleManagement</Name>
        <Access>Public</Access>
        <Location left="1208" top="1913" />
        <Size width="624" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void NewSchedule(int workerId, DateTime scheduleDate, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Member type="Method">public void ChangeSchedule(int scheduleId, int workerId, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Member type="Method">public static void DeleteSchedule(int id)</Member>
        <Member type="Method">public List&lt;Shedule&gt; GetAllSchedules()</Member>
        <Member type="Method">public List&lt;Schedule&gt; GetAllSchedules(int accountId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GenreManagement</Name>
        <Access>Public</Access>
        <Location left="2897" top="64" />
        <Size width="307" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void MakeNewGenre(string name)</Member>
        <Member type="Method">public void CoupleGenreToItem(int genreId, int itemId)</Member>
        <Member type="Method">public void DecoupleGenreToItem(int genreId, int itemId)</Member>
        <Member type="Method">public static void DeleteGenre(int id)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDatabaseAccess</Name>
        <Access>Public</Access>
        <Location left="1812" top="1072" />
        <Size width="162" height="117" />
        <Collapsed>False</Collapsed>
        <Member type="Method">MySQLConnection MakeConnection()</Member>
        <Member type="Method">void closeConnection()</Member>
      </Entity>
      <Entity type="Class">
        <Name>DBConnection</Name>
        <Access>Public</Access>
        <Location left="2123" top="1072" />
        <Size width="244" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public MySQLConnection MakeConnection()</Member>
        <Member type="Method">public void closeConnection()</Member>
        <Member type="Method">public int ExecuteNoNQuery(MySQLCommand query)</Member>
        <Member type="Method">public DataSet ExecuteReader(MySQLCommand query)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>All Management classes
use the DBConnection to connect to the database</Text>
        <Location left="2480" top="1244" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>AllManagementClasses</Name>
        <Access>Public</Access>
        <Location left="2480" top="1344" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2530</X>
          <Y>442</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2360</X>
          <Y>406</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2360</X>
          <Y>388</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_genres</EndRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="6">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>696</X>
          <Y>1330</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_position</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="2">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1940</X>
          <Y>425</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_item</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="7" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1309</X>
          <Y>891</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_account</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>736</X>
          <Y>1563</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_workers</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="12" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>206</X>
          <Y>1027</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>541</X>
          <Y>1033</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1050</X>
          <Y>436</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="11" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1894</X>
          <Y>338</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="11" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>882</X>
          <Y>498</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1030</X>
          <Y>891</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="18" second="16">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="16" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>