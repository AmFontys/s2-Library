<Project>
  <Name>Library</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Class</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Book</Name>
        <Access>Public</Access>
        <Location left="1646" top="570" />
        <Size width="717" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int _pages</Member>
        <Member type="Field">private string _author</Member>
        <Member type="Field">private string _publisher</Member>
        <Member type="Method">public string GetAuthor()</Member>
        <Member type="Method">public string GetPublisher()</Member>
        <Member type="Constructor">public Book(int page, string author, string publisher)</Member>
        <Member type="Method">public override void UpdateItem(string name, string isbn, string language, string description, double cost, int pages, string author, string publisher)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public override void AddGenre()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Movie</Name>
        <Access>Public</Access>
        <Location left="2394" top="452" />
        <Size width="849" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _subtitled</Member>
        <Member type="Field">private string _producer</Member>
        <Member type="Field">private int _time√ånMin</Member>
        <Member type="Field">private string _demographic</Member>
        <Member type="Method">public string GetSubTitle()</Member>
        <Member type="Method">public string GetProducer()</Member>
        <Member type="Method">public string GetDemographic()</Member>
        <Member type="Constructor">public Movie(string subtitle, string producer, int timeInMin, string demographic)</Member>
        <Member type="Method">public override void UpdateItem(string name, string isbn, string language, string description, double cost, string language, string producer, int timeInMin, string demographic)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public override void AddGenre()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Item</Name>
        <Access>Public</Access>
        <Location left="1877" top="34" />
        <Size width="518" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected string _name</Member>
        <Member type="Field">protected string _ISBN</Member>
        <Member type="Field">protected double _cost</Member>
        <Member type="Field">private string _language</Member>
        <Member type="Field">private string _description</Member>
        <Member type="Method">public string GetLanguage()</Member>
        <Member type="Method">public string GetDescription()</Member>
        <Member type="Method">private void SetLanguage()</Member>
        <Member type="Method">private void SetDescription()</Member>
        <Member type="Constructor">public Item(string name, string ISBN, string language, string description, double cost)</Member>
        <Member type="Method">protected abstract void UpdateItem()</Member>
        <Member type="Method">protected abstract void AddGenre()</Member>
        <Member type="Method">public void DeleteGenre(string genre)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Genre</Name>
        <Access>Public</Access>
        <Location left="2582" top="51" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _genreName</Member>
        <Member type="Method">public void GetName()</Member>
        <Member type="Method">private void SetName()</Member>
        <Member type="Constructor">public Genre(string name)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="556" top="894" />
        <Size width="753" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _fname</Member>
        <Member type="Field">private string _lname</Member>
        <Member type="Field">private string _email</Member>
        <Member type="Field">private string _telephone</Member>
        <Member type="Field">private string _street</Member>
        <Member type="Field">private string _houseNum</Member>
        <Member type="Field">private string _zipcode</Member>
        <Member type="Field">private string _city</Member>
        <Member type="Field">private string _password</Member>
        <Member type="Field">private string _keyword</Member>
        <Member type="Field">private string _card</Member>
        <Member type="Method">public string GetKeyword()</Member>
        <Member type="Constructor">public Account(string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">public void UpdateAccount()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Worker</Name>
        <Access>Public</Access>
        <Location left="466" top="1299" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _bankAccount</Member>
        <Member type="Field">private string _citizenServiceNum</Member>
        <Member type="Field">private double _salary</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="1086" top="1299" />
        <Size width="237" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _name</Member>
        <Member type="Field">private double _startSalary</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public double GetStartSalary()</Member>
        <Member type="Method">public string GetName()</Member>
        <Member type="Constructor">public Position(string name, double startSalary)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenHour</Name>
        <Access>Public</Access>
        <Location left="10" top="2147" />
        <Size width="412" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int _week</Member>
        <Member type="Field">private int _day</Member>
        <Member type="Field">private TimeSpan _openTime</Member>
        <Member type="Field">private TimeSpan _closeTime</Member>
        <Member type="Method">public string GetDate()</Member>
        <Member type="Method">public string GetTime()</Member>
        <Member type="Constructor">public OpenHour(int week, int day, TimeSpan opentime, TimeSpan closetime)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Reservation</Name>
        <Access>Public</Access>
        <Location left="1125" top="367" />
        <Size width="449" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private DateTime _startDate</Member>
        <Member type="Field">private DateTime _endDate</Member>
        <Member type="Field">private int _extensionNum</Member>
        <Member type="Method">public void MakeReservation(Item item, Account borrower)</Member>
        <Member type="Method">public void ExtendRentPeriod()</Member>
        <Member type="Constructor">public Reservation(Item item, Account user, DateTime startDate, DateTime endDate)</Member>
        <Member type="Constructor">public Reservation(DateTime start, DateTime end, Item item)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Event</Name>
        <Access>Public</Access>
        <Location left="460" top="2099" />
        <Size width="659" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _eventName</Member>
        <Member type="Field">private DateTime _eventDate</Member>
        <Member type="Field">private double _cost</Member>
        <Member type="Field">private TimeSpan _openTime</Member>
        <Member type="Field">private TimeSpan _endTime</Member>
        <Member type="Field">private string _description</Member>
        <Member type="Field">private string eventType</Member>
        <Member type="Constructor">public Event(string name, DateTime date, double cost, TimeSpan openTime, TimeSpan closeTime, string description, string type)</Member>
        <Member type="Method">public string GetDescription()</Member>
        <Member type="Method">public DateTime GetEventDate()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Schedule</Name>
        <Access>Public</Access>
        <Location left="1171" top="1591" />
        <Size width="405" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private DateTime _date</Member>
        <Member type="Field">private TimeSpan _beginHour</Member>
        <Member type="Field">private TimeSpan _endHour</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public void AddWorker(Worker employee)</Member>
        <Member type="Method">public void DeleteWorker(Worker worker)</Member>
        <Member type="Constructor">public Schedule(DateTime date, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Make use of correct arrows
Add Crud and poly into it
Split library class</Text>
        <Location left="13" top="12" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>ItemManegement</Name>
        <Access>Public</Access>
        <Location left="868" top="12" />
        <Size width="813" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void AddItem(string name, string ISBN, double cost, string language, string description, int page, string author, string publisher)</Member>
        <Member type="Method">public void AddItem(string name, string ISBN, double cost, string language, string description, string subtitle, string producer, int time, string demographic)</Member>
        <Member type="Method">public void UpdateItem(int id, string name, string ISBN, double cost, string language, string description, int page, string author, string publisher)</Member>
        <Member type="Method">public void UpdateItem(int id, string name, string ISBN, double cost, string language, string description, string subtitle, string producer, int time, string demographic)</Member>
        <Member type="Method">public static void DeleteItem(int id)</Member>
        <Member type="Method">public object SearchItem(string data, char searchOn)</Member>
        <Member type="Method">public List&lt;Book&gt; GetAllItems()</Member>
        <Member type="Method">public List&lt;Movie&gt; GetAllItems()</Member>
        <Member type="Method">public void MakeNewGenre(string name)</Member>
        <Member type="Method">public void CoupleGenreToItem(int genreId, int itemId)</Member>
        <Member type="Method">public static void DeleteGenre(int id)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReservationManegement</Name>
        <Access>Public</Access>
        <Location left="403" top="225" />
        <Size width="428" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void MakeReservation(int itemId, int accountId, DateTime StartDate)</Member>
        <Member type="Method">public static void DeleteReservation(int id)</Member>
        <Member type="Method">public bool ExtendReservation(int reservationId)</Member>
        <Member type="Method">public List&lt;Reservation&gt; GetReservations()</Member>
        <Member type="Method">public List&lt;Reservation&gt; GetReservation(int accountId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AccountManegement</Name>
        <Access>Public</Access>
        <Location left="10" top="604" />
        <Size width="934" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void AddAccount(string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">public void UpdateAccount(int id, string fname, string lname, string email, string telephone, string street, string housenum, string zipcode, string city, string password)</Member>
        <Member type="Method">public static void DeleteAccount(int id)</Member>
        <Member type="Method">public void MakeAccountWorker(int accountId, int jobId, string bankAccount, string serviceNumber, double salary)</Member>
        <Member type="Method">public void ChangeWorkerJob(int accountId, int positionId)</Member>
        <Member type="Method">public void UpdateWorker(int accountId, string bankAccount, double salary)</Member>
        <Member type="Method">public static void DeleteWorker(int accountId)</Member>
        <Member type="Method">public void AddPosition(string name, double salary)</Member>
        <Member type="Method">public void UpdatePosition(int id, string name, double salary)</Member>
        <Member type="Method">public List&lt;Account&gt; GetAllAccount()</Member>
        <Member type="Method">public List&lt;Worker&gt; GetAccounts()</Member>
        <Member type="Method">public List&lt;Position&gt; GetPositions()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LibraryManegement</Name>
        <Access>Public</Access>
        <Location left="10" top="1774" />
        <Size width="420" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void MakeSpecialOpenHour(int week, int day, TimeSpan open, TimeSpan close)</Member>
        <Member type="Method">public void ChangeOpenHour(int id, TimeSpan open, TimeSpan close)</Member>
        <Member type="Method">public static void DeleteOpenhour(int id)</Member>
        <Member type="Method">public List&lt;OpenHour&gt; GetOpeningHours()</Member>
        <Member type="Method">public void NewEvent(string name, DateTime date, double cost, TimeSpan openTime, TimeSpan closeTime, string description, string type)</Member>
        <Member type="Method">public void UpdateEvent(int eventId, string name, DateTime date, double cost, TimeSpan openTime, TimeSpan closeTime, string description, string type)</Member>
        <Member type="Method">public static void DeleteEvent(int eventId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Class for everythin inside of the library </Text>
        <Location left="10" top="1711" />
        <Size width="280" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleManagement</Name>
        <Access>Public</Access>
        <Location left="1166" top="1891" />
        <Size width="624" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void NewSchedule(int workerId, DateTime scheduleDate, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Member type="Method">public void ChangeSchedule(int scheduleId, int workerId, TimeSpan beginHour, TimeSpan endHour)</Member>
        <Member type="Method">public static void DeleteSchedule(int id)</Member>
        <Member type="Method">public List&lt;Shedule&gt; GetAllSchedules()</Member>
        <Member type="Method">public List&lt;Schedule&gt; GetAllSchedules(int accountId)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2488</X>
          <Y>420</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2318</X>
          <Y>384</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2318</X>
          <Y>366</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_genres</EndRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="6">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>654</X>
          <Y>1308</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_position</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="2">
        <Label>has</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1898</X>
          <Y>403</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_item</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1267</X>
          <Y>869</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_account</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>694</X>
          <Y>1541</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_workers</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="12" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="15" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>85</X>
          <Y>2121</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="15" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>161</X>
          <Y>969</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>499</X>
          <Y>1011</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>677</X>
          <Y>573</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="10">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>